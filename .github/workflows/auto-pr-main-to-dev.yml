# .github/workflows/auto-pr-main-to-dev.yml
name: Auto PR main → dev (native)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  open-pr:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - name: Ensure dev exists (optional)
        run: |
          git ls-remote --heads origin dev || {
            echo "Branch dev no existe, se creará desde main"
            git fetch origin main
            git checkout -b dev origin/main
            git push origin dev
          }

      - name: Detect commits behind
        id: diff
        run: |
          git fetch origin dev main
          BEHIND=$(git rev-list --right-only --count origin/dev...origin/main)
          echo "behind=$BEHIND" >> "$GITHUB_OUTPUT"

      - name: Skip if nothing to sync
        if: steps.diff.outputs.behind == '0'
        run: echo "dev está al día con main, no se abre PR."

      - name: Create PR if needed
        if: steps.diff.outputs.behind != '0'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            const head = "main";
            const base = "dev";
            // 1) ¿Ya existe un PR abierto main → dev?
            const prs = await github.rest.pulls.list({
              owner, repo, state: "open", head: `${owner}:${head}`, base
            });
            if (prs.data.length > 0) {
              core.info(`PR existente #${prs.data[0].number} main → dev`);
              return;
            }
            // 2) Crear nuevo PR
            const pr = await github.rest.pulls.create({
              owner, repo,
              title: "Sync: main → dev",
              head, base,
              body: `This PR keeps **dev** up to date with **main**.\nCommits behind: ${process.env.BEHIND || ''}`
            });
            core.info(`PR creado #${pr.data.number}`);
          env:
            BEHIND: ${{ steps.diff.outputs.behind }}
